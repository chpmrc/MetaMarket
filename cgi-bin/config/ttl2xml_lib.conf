<?php
require_once("http.conf");
/*%%%%%%%%%%% FUNZIONI CREATE PER LA CONVERSIONE DA TURTLE A XML %%%%%%%%%%%%%%%%%%*/
/* CREATORE MICHEL GOITOM TUCCU */

/*================================== SELEZIONATORE URI ==========================================*/
function seleziona_uri ($tipo) { //funzione seleziona uri che a seconda della propriety key risponde con un uri
    $cs = array ("opening", "closing");
    $vcard = array ("category", "fn","extended-address", "latitude", "longitude", "tel", "fax", "note");
    $dcterms = array ("creator", "created", "description", "valid", "source", "version");

    if ($tipo == null) {return null;}
    elseif (in_array ($tipo, $vcard)) { return "http://www.w3.org/2006/vcard/ns#"; }
    elseif (in_array ($tipo, $cs)) { return "http://cs.unibo.it/ontology/"; }
    elseif (in_array ($tipo, $dcterms)) { return "http://purl.org/dc/terms/"; }
    elseif ($tipo == 'id') {return 'http://www.essepuntato.it/resource/' ;}
}
/*============================== AGGIUSTA KEY ==============================================*/
function aggiusta_key ($key) { //funzione che dato una key trasforma il nome adattandolo per quello turtle
    $key = trim($key);
    $key = strtolower($key);
    $new_key = null;
    switch($key) {
        case 'id': { return $new_key = 'id'; }break;
        case 'name': { return $new_key ='fn'; }break;
        case 'lat': { return $new_key = 'latitude'; }break;
        case 'long': { return $new_key = 'longitude'; }break;
        case 'address': { return $new_key = 'extended-address'; }break;
        case 'category': { return $new_key = 'category'; }break;
        case 'opening': { return $new_key = 'opening'; }break;
        case 'closing': { return $new_key = 'closing'; }break;
        case 'tel': { return $new_key = 'tel'; }break;
        case null: {return $new_key = null; }break;
    }
    return $new_key;
}

                        /*============ FUNZIONI PRELEVA ID DA URI ==========='*/

function expl_slash ($string) { //esplodi per slash
    $new_string = $string;
    $new_string = explode ('/',$new_string);
    return $new_string;
}

function subject ($soggetto) { //dato un uri di tipo http://www.essepuntato.it/resource/ptxxxx preleva da questo uri ptxxxx
    $subject = expl_slash ($soggetto);
    $subject = $subject [count ($subject)-1];
    return $subject;
}

						/*============= FUNZIONE CREA NOME RANDOM =================*/

// genera una stringa casuale della lunghezza desiderata
 
function random_string($lunghezza) {
    $string = "";
// genera una stringa casuale che ha lunghezza
// uguale al multiplo di 32 successivo a $lunghezza
    for ($i = 0; $i <= ($lunghezza/32); $i++)
        $string .= md5(time()+rand(0,99));

// indice di partenza limite
    $max_start_index = (32*$i)-$lunghezza;

// seleziona la stringa, utilizzando come indice iniziale
// un valore tra 0 e $max_start_point
    $random_string = substr($string, rand(0, $max_start_index), $lunghezza);
 
    return $random_string;
}

?>
